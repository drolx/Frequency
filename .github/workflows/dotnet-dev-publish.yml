name: alpha-package-publish

on:
  release:
    types: [published]

jobs:
  release:
    name: Release
    strategy:
      matrix:
        kind:
          ["linux-x64", "linux-arm64", "linux-arm", "windows-x64", "osx-x64"]
        include:
          - kind: linux-x64
            os: ubuntu-latest
            target: linux-x64
          - kind: linux-arm64
            os: ubuntu-latest
            target: linux-arm64
          - kind: linux-arm
            os: ubuntu-latest
            target: linux-arm
          - kind: windows-x64
            os: windows-latest
            target: win-x64
          - kind: osx-x64
            os: macos-latest
            target: osx-x64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "6.0.x"
          include-prerelease: true

      - name: Build
        shell: bash
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="Proton.Frequency.Service-bin-$tag-${{ matrix.target }}"

          # Build for windows, osx and linux
            dotnet publish Proton.Frequency.Service.csproj --runtime "${{ matrix.target }}" -c Release -o "$release_name" --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -p:PublishReadyToRun=true

          # Build everything & Pack files
          if [ "${{ matrix.target }}" == "win-x64" ]; then
            # Pack to zip
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            # Pack to gzipped tar 
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi
          # Delete output directory
          rm -r "$release_name"
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "Proton.Frequency.Service-bin-*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
